---
title: "Comparisons simulated interaction effect size for 3D sim"
date: today
format:
  html:
    embed-resources: true
    code-fold: true
    toc: true
    toc-location: left
execute: 
  cache: false
  warning: false
  error: false
---




```{r}
library(tidyverse)
library(patchwork)
library(kableExtra)
library(ggsci)
library(gt)
theme_set(theme_bw())
theme_update(
    scale_fill = scale_fill_npg(),
    scale_color = scale_color_npg(),
)

df <- data.frame("file" = dir()) %>%
    filter(grepl(".csv$", file)) %>%
    mutate(
        Imbalanced = grepl("^Imbal_", file),
        mass1 = str_extract(file, "mass[0-9].0"),
        mass1 = as.numeric(str_remove(mass1, "^mass")),
        mass2 = str_extract(file, "[0-9].0.csv"),
        mass2 = as.numeric(str_remove(mass1, ".csv$")),
    ) %>%
    # map read these csvs into nested dataframe
    mutate(data = map(file, read_csv))  %>%
    # unnest them
    unnest(data) %>%
    select(
        `ppmx-common_rind` = rind_Mix,
        ppmx_rind = rind_DPM,
        kmean_rind = rind_K,
        `ppmx-common_arind` = adjrind_Mix,
        ppmx_arind = adjrind_DPM,
        kmean_arind = adjrind_K,

        `ppmx-common_rmse` = midMix,
        ppmx_rmse = midDPM,
        kmean_rmse = kmean_MSE,
        slr_rmse = slrRMSE,
        
        `ppmx-common_common1` = meanBeta1,
        `ppmx-common_common2` = meanBeta2,
        kmean_common1 = meanBetakclust1,
        kmean_common2 = meanBetakclust2,
        slr_common1 = meanBetaSLR,
        slr_common2 = meanBetaSLR2,

        `ppmx-common1_T2` = zeroInDPM,
        `ppmx-common2_T2` = zeroInDPM2,
        kmean1_T2 = zeroInk,
        kmean2_T2 = zeroInk2,
        slr1_T2 = zeroInSLR,
        slr2_T2 = zeroInSLR2,
        `ppmx-common1_Cov` = commonInDPM,
        `ppmx-common2_Cov` = commonInDPM2,
        kmean1_Cov = commonInk,
        kmean2_Cov = commonInk2,
        slr1_Cov = commonInSLR,
        slr2_Cov = commonInSLR2,

        `ppmx-common_NC` = ncMix,
        `ppmx_NC` = ncDPM,
        kmean_NC = ncK,
        
        `ppmx-common_bayesP` = bayesPmix,
        `ppmx_bayesP` = bayesPDPM,

        contains("rind"),
        contains("bayes"),

        Common = common, Precision = prec, Alpha = alph,
        Beta = bet, InterEffect = interEffect, Imbalanced,
        xdiff, variance, N, mass1, mass2
    )
# group by file
modLoc <- df %>%
    # select(-contains("rind"), -contains("bayes")) %>%
    reframe(
        # type 2 error
        across(ends_with("T2"), function(x) mean(x, na.rm = T)),
        # coverage
        across(ends_with("_Cov"), function(x) mean(x, na.rm = T)),
        # bias
        across(ends_with("_common1"), function(x) mean(Common - x, na.rm = T), .names= "{.col}-bias"),
        across(ends_with("_common2"), function(x) mean(-Common - x, na.rm = T), .names= "{.col}-bias"),
        # MSE
        across(ends_with("_common1"), function(x) sqrt(mean((Common - x)^2, na.rm = T)), .names= "{.col}-RMSE"),
        across(ends_with("_common2"), function(x) sqrt(mean((-Common - x)^2, na.rm = T)), .names= "{.col}-RMSE"),
        .by = c(N, Common, InterEffect, Alpha, Beta, Precision, Imbalanced, variance, xdiff)
    ) %>%
    pivot_longer(
        -c(Common, Alpha, Beta, Precision, InterEffect, Imbalanced, variance, xdiff),
         names_to = c(".value", "Metric"),
         names_pattern = "(.*)_(.*)",
        ) %>%
    select(-c(slr1, slr2, kmean1, kmean2, `ppmx-common1`, `ppmx-common2`)) %>%
    # filter out global assesses
    drop_na(`ppmx-common`, kmean, slr)




    
modGlob <- df %>%
    # select(-contains("rind"), -contains("bayes")) %>%
    reframe(
        across(ends_with("_bayesP"), function(x) mean(x, na.rm = T), .names= "{.col}-bayesP"),
        across(ends_with("_rind"), function(x) mean(x, na.rm = T), .names= "{.col}-rind"),
        .by = c(N, Common, InterEffect, Alpha, Beta, Precision, Imbalanced, variance, xdiff)
    ) %>%
    pivot_longer(
        -c(Common, Alpha, Beta, Precision, InterEffect, Imbalanced, variance, xdiff),
         names_to = c(".value", "Metric"),
         names_pattern = "(.*)_(.*)",
        ) %>%
    drop_na()
longDF <- df %>%
    pivot_longer(
        -c(N, Common, Alpha, Beta, Precision, InterEffect, Imbalanced, variance, xdiff),
         names_to = c(".value", "Metric"),
         names_pattern = "(.*)\\_(.*)",
        ) %>%
    pivot_longer(c(`ppmx-common`, ppmx, kmean, slr), names_to = "Model", values_to = "Statistic") # %>%
    # filter(Metric != "rind" | Statistic >=0.4)
```

# local interp
```{r}
modLoc |> 
    arrange(InterEffect, Alpha, Beta, Metric) |>
    mutate(
        group_label = sprintf("InterEffect = %s, Alpha = %s, Beta = %s", InterEffect, Alpha,Beta),
        parameter= ifelse(grepl("1", Metric), "1", "2"),
        Metric = ifelse(grepl("bias", Metric), "bias", "RMSE"),
    ) |> glimpse()
    reframe(.by = c(group_label, grepl("")))
    group_by(group_label) |>
    select(-c(InterEffect, Alpha, Beta, Precision)) |>
    gt()

```


# Common Effect
```{r}
# longDF %>%
#     filter(Metric == "common", Imbalanced == TRUE) %>%
#     ggplot(aes(x = Statistic, fill = Model)) +
#     geom_density(alpha = 0.3) +
#     geom_vline(xintercept = 1.0) +
#     facet_grid(
#         rows = vars(InterEffect), cols = vars(Common, variance), scales = "free",
#         labeller = labeller(.rows = label_both, .cols = label_both)
#     ) +
#     ggtitle("Common effects sampling distribution (alpha=2, beta=1,prec=0.01), Imbalanced") +
#     xlab("Common Estimate")
longDF %>%
    filter(Imbalanced == FALSE, Metric == "common1") %>%
    ggplot(aes(x = Statistic, fill = Model)) +
    geom_density(alpha = 0.35) +
    geom_vline(aes(xintercept = unique(Common))) +
    geom_vline(xintercept = 0.0) +
    facet_grid(
        rows = vars(Alpha), cols = vars(Beta), scales = "free",
        labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    ggtitle("Common effects (common=1, Interaction=1)") +
    xlab("Common Estimate")
ggsave("../../psychometrika/figures/beta1Tuning.png", width = 6, dpi = 300, units = "in")

longDF %>%
    filter(Imbalanced == FALSE, Metric == "common2") %>%
    ggplot(aes(x = Statistic, fill = Model)) +
    geom_density(alpha = 0.35) +
    geom_vline(aes(xintercept = -unique(Common))) +
    geom_vline(xintercept = 0.0) +
    facet_grid(
        rows = vars(Alpha), cols = vars(Beta), scales = "free",
        labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    ggtitle("Common effects (common=-1, Interaction=1), Balanced") +
    xlab("Common Estimate")
ggsave("../../psychometrika/figures/beta2Tuning.png", width = 6, dpi = 300, units = "in")
```

```{r}
longDF %>%
    filter(Imbalanced == FALSE, grepl("^common", Metric)) %>%
    ggplot(aes(x = Statistic, fill = Model)) +
    geom_density(alpha = 0.35) +
    geom_vline(xintercept = 0.0) +
    # geom_vline(aes(xintercept = unique(Common))) +
    facet_grid(
        rows = vars(xdiff, Alpha, Beta), cols = vars(Metric), scales = "free",
        labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    ggtitle("Common effects (common=5, Interaction=5), Balanced") +
    xlab("Common Estimate")
ggsave("../../psychometrika/figures/betaVinter.png", width = 6, dpi = 300, units = "in")
```


## Model comparison tables 
- tuning InterEffect = 0.25, variance = 0.1, Common = 1.0
```{r}
temp %>%
    # filter(InterEffect == 0.25) %>%
    select(-c(xdiff, Precision, variance, Common, Imbalanced)) |>
    arrange(InterEffect, Alpha, Beta, Metric) |>
    mutate(group_label = sprintf("InterEffect = %s, Alpha = %s, Beta = %s", InterEffect, Alpha,Beta)) |>
    group_by(group_label) |>
    select(-c(Alpha, Beta, InterEffect)) |>
    # filter(grepl("common1", Metric)) %>%
    # pivot_wider(names_from = Metric, values_from = c(`ppmx-common`, kmean, slr)) |>
    gt()
    tab_options(row_group.as_column = TRUE)
    
    fmt_number(
      n_sigfig = 2,
      use_seps = FALSE
    ) |>
    fmt_number(
      columns = c(Alpha, Beta),
      n_sigfig = 2,
      use_seps = FALSE
    ) |>
    tab_spanner(
        label = "Priors",
        columns = c(Alpha, Beta)
    ) |>
    tab_spanner(
        id = "Beta1 T2 Error",
        label = "T2 Error",
        columns = c(`ppmx-common_T2`, kmean_T2, slr_T2)
    ) |>
    tab_spanner(
        id = "Beta1 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta1 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`)
    ) |>
    tab_spanner(
        id = "Beta1 Coverage",
        label = "Coverage",
        columns = c(`ppmx-common_Cov`, kmean_Cov, slr_Cov)
    ) |>
    tab_spanner(
        id = "Beta2 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta2 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`)
    ) |>
    tab_spanner(
        label = "Common β1",
        columns = c(
            `ppmx-common_T2`, kmean_T2, slr_T2, 
            `ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`,
            `ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`,
            `ppmx-common_Cov`, kmean_Cov, slr_Cov,
        )
    ) |>
    tab_spanner(
        label = "Common β2",
        columns = c(
            `ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`,
            `ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`,
        )
    ) |>
    cols_label(
        `ppmx-common_Cov` = "ppmx-common",
        `ppmx-common_common1-bias` = "ppmx-common",
        `ppmx-common_common1-RMSE` = "ppmx-common",
        `ppmx-common_common2-bias` = "ppmx-common",
        `ppmx-common_common2-RMSE` = "ppmx-common",
        `ppmx-common_T2` = "ppmx-common",

        kmean_T2 = "kmean",
        kmean_Cov = "kmean",
        `kmean_common1-RMSE` = "kmean",
        `kmean_common1-bias` = "kmean",
        `kmean_common2-RMSE` = "kmean",
        `kmean_common2-bias` = "kmean",
        
        slr_T2 = "SLR",
        slr_Cov = "SLR",
        `slr_common1-RMSE` = "SLR",
        `slr_common1-bias` = "SLR",
        `slr_common2-RMSE` = "SLR",
        `slr_common2-bias` = "SLR",
        Alpha = "a",
        Beta = "b",
    )

```

```{r}
temp %>%
    # filter(InterEffect == 0.25) %>%
    select(-c(InterEffect, Precision, variance, Common, Imbalanced)) %>%
    arrange(Metric) %>%
    pivot_wider(names_from = Metric, values_from = c(`ppmx-common`, kmean, slr)) |>
    gt() |>
    fmt_number(
      n_sigfig = 2,
      use_seps = FALSE
    ) |>
    fmt_number(
      columns = c(Alpha, Beta),
      n_sigfig = 2,
      use_seps = FALSE
    ) |>
    tab_spanner(
        label = "Priors",
        columns = c(Alpha, Beta)
    ) |>
    tab_spanner(
        id = "Beta1 T2 Error",
        label = "T2 Error",
        columns = c(`ppmx-common_T2`, kmean_T2, slr_T2)
    ) |>
    tab_spanner(
        id = "Beta1 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta1 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`)
    ) |>
    tab_spanner(
        id = "Beta1 Coverage",
        label = "Coverage",
        columns = c(`ppmx-common_Cov`, kmean_Cov, slr_Cov)
    ) |>
    tab_spanner(
        id = "Beta2 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta2 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`)
    ) |>
    tab_spanner(
        label = "Common β1",
        columns = c(
            `ppmx-common_T2`, kmean_T2, slr_T2, 
            `ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`,
            `ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`,
            `ppmx-common_Cov`, kmean_Cov, slr_Cov,
        )
    ) |>
    tab_spanner(
        label = "Common β2",
        columns = c(
            `ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`,
            `ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`,
        )
    ) |>
    cols_label(
        `ppmx-common_Cov` = "ppmx-common",
        `ppmx-common_common1-bias` = "ppmx-common",
        `ppmx-common_common1-RMSE` = "ppmx-common",
        `ppmx-common_common2-bias` = "ppmx-common",
        `ppmx-common_common2-RMSE` = "ppmx-common",
        `ppmx-common_T2` = "ppmx-common",

        kmean_T2 = "kmean",
        kmean_Cov = "kmean",
        `kmean_common1-RMSE` = "kmean",
        `kmean_common1-bias` = "kmean",
        `kmean_common2-RMSE` = "kmean",
        `kmean_common2-bias` = "kmean",
        
        slr_T2 = "SLR",
        slr_Cov = "SLR",
        `slr_common1-RMSE` = "SLR",
        `slr_common1-bias` = "SLR",
        `slr_common2-RMSE` = "SLR",
        `slr_common2-bias` = "SLR",
        Alpha = "a",
        Beta = "b",
    )

```


- vs InterEffects
```{r}
temp %>%
    filter(Alpha == 3.0, Beta == 3.0) %>%
    select(-c(Alpha, Beta, Precision, variance, Common, Imbalanced)) %>%
    arrange(Metric) %>%
    pivot_wider(names_from = Metric, values_from = c(`ppmx-common`, kmean, slr)) |>
    gt() |>
    fmt_number(
      n_sigfig = 2,
      use_seps = FALSE
    ) |>
    tab_spanner(
        label = "Simulation",
        columns = c(InterEffect)
    ) |>
    tab_spanner(
        id = "Beta1 T2 Error",
        label = "T2 Error",
        columns = c(`ppmx-common_T2`, kmean_T2, slr_T2)
    ) |>
    tab_spanner(
        id = "Beta1 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta1 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`)
    ) |>
    tab_spanner(
        id = "Beta1 Coverage",
        label = "Coverage",
        columns = c(`ppmx-common_Cov`, kmean_Cov, slr_Cov)
    ) |>
    tab_spanner(
        id = "Beta2 RMSE",
        label = "RMSE",
        columns = c(`ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`)
    ) |>
    tab_spanner(
        id = "Beta2 Bias",
        label = "Bias",
        columns = c(`ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`)
    ) |>
    tab_spanner(
        label = "Common β1",
        columns = c(
            `ppmx-common_T2`, kmean_T2, slr_T2, 
            `ppmx-common_common1-RMSE`, `kmean_common1-RMSE`, `slr_common1-RMSE`,
            `ppmx-common_common1-bias`, `kmean_common1-bias`, `slr_common1-bias`,
            `ppmx-common_Cov`, kmean_Cov, slr_Cov,
        )
    ) |>
    tab_spanner(
        label = "Common β2",
        columns = c(
            `ppmx-common_common2-RMSE`, `kmean_common2-RMSE`, `slr_common2-RMSE`,
            `ppmx-common_common2-bias`, `kmean_common2-bias`, `slr_common2-bias`,
        )
    ) |>
    cols_label(
        `ppmx-common_Cov` = "ppmx-common",
        `ppmx-common_common1-bias` = "ppmx-common",
        `ppmx-common_common1-RMSE` = "ppmx-common",
        `ppmx-common_common2-bias` = "ppmx-common",
        `ppmx-common_common2-RMSE` = "ppmx-common",
        `ppmx-common_T2` = "ppmx-common",

        kmean_T2 = "kmean",
        kmean_Cov = "kmean",
        `kmean_common1-RMSE` = "kmean",
        `kmean_common1-bias` = "kmean",
        `kmean_common2-RMSE` = "kmean",
        `kmean_common2-bias` = "kmean",
        
        slr_T2 = "SLR",
        slr_Cov = "SLR",
        `slr_common1-RMSE` = "SLR",
        `slr_common1-bias` = "SLR",
        `slr_common2-RMSE` = "SLR",
        `slr_common2-bias` = "SLR",
        InterEffect= "σ(β)"
    )

```

## clustering and prediction vs inter effect
```{r}
longDF %>%
    filter(Alpha == 3.0, Beta == 3.0, grepl("rind", Metric) | grepl("bayes", Metric)) %>%
    select(-c(Alpha, Beta, Precision, variance, Common, Imbalanced)) %>%
    arrange(InterEffect, Metric)
```


```{r}
longDF %>%
    filter(Metric == "rind") %>%
    ggplot(aes(x = Statistic, fill = Model, y = ..density..)) +
    geom_histogram(alpha = 0.3, color = "black") +
    facet_grid(cols = vars(Alpha), rows = vars(Beta), scales = "free",
        labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    xlim(0.5, 1.0) +
    ggtitle("Rand index (common=1, Interaction=0.25), Balanced")
```



# big sim
```{r}
longDF %>%
    filter(Imbalanced == FALSE, Metric == "common1", N== 1000) %>%
    ggplot(aes(x = Statistic, fill = Model)) +
    geom_density(alpha = 0.2) +
    geom_vline(xintercept = 1.0) +
    geom_vline(xintercept = 0.0) +
    facet_grid(
        rows = vars(InterEffect), cols = vars(Beta), scales = "free",
        #labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    ggtitle("Common effects") +
    xlab("Common Estimate")
ggsave("../../psychometrika/figures/bigSimcommon1.png", width = 6, dpi = 300, units = "in")

longDF %>%
    filter(Imbalanced == FALSE, Metric == "common2", N== 1000) %>%
    ggplot(aes(x = Statistic, fill = Model)) +
    geom_density(alpha = 0.2) +
    geom_vline(xintercept = 1.0) +
    geom_vline(xintercept = 0.0) +
    facet_grid(
        rows = vars(InterEffect), cols = vars(Beta), scales = "free",
        #labeller = labeller(.rows = label_both, .cols = label_both)
    ) +
    ggtitle("Common effects") +
    xlab("Common Estimate")
ggsave("../../psychometrika/figures/bigSimcommon2.png", width = 6, dpi = 300, units = "in")

longDF %>%
    filter(Metric == "rind", N == 1000) %>%
    ggplot(aes(x = Statistic, fill = Model, y = ..density..)) +
    geom_histogram(alpha = 0.3, color = "black") +
    facet_wrap(~InterEffect) + #, labeller = labeller(.rows = label_both, .cols = label_both))
    ggtitle("Rand index, N = 1000")
ggsave("../../psychometrika/figures/bigSimRI.png", width = 6, dpi = 300, units = "in")

```

